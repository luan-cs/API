<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClassification.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>